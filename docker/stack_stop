#!/bin/bash
# Stops the stack with options.

# Some Defaults
OUTPUT_COMMAND=0
DOWN=0
COMMAND='stop'

# Check for positional arguments
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
	-h|--help)
	echo "Stops the stack with options.

Usage: stop [-o|--output-command]

-d|--down           Stops the stack and remove containers, networks, images, and volumes.
-o|--output-command Outputs the command instead of running it."
	exit 0
	;;
    -o|--output-command)
    OUTPUT_COMMAND=1
    shift # past argument
   	;;
   	-r|--remove)
   	DOWN=1
   	shift # past argument
   	;;
    *) # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo DOWN =  "${DOWN}"
echo OUTPUT_COMMAND  = "${OUTPUT_COMMAND}"

SCRIPTDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd "$SCRIPTDIR";

if [[ "$OSTYPE" == "darwin"* ]]; then
	COMPOSE="docker-compose"
elif [[ $(which docker.exe) ]]; then
	COMPOSE="docker-compose.exe"
else
	COMPOSE="docker-compose"
fi;

if [ ${DOWN} -eq 1 ]; then
   COMMAND='down'
fi

if [ ${OUTPUT_COMMAND} -eq 1 ]; then
	echo "Command: ${COMPOSE} -f stack.yml ${COMMAND}"

	exit 0
fi

${COMPOSE} -f stack.yml ${COMMAND}
